# RNN for time series forecasting

# Step 1: Preprocess data
function preprocess_data(series, window_size):
    X, y = [], []
    for i from 0 to length(series) - window_size:
        X_window = series[i:i+window_size]
        y_value = series[i + window_size]
        append X_window to X
        append y_value to y
    return X, y

# Step 2: Define RNN model
function define_rnn_model(window_size):
    model = Sequential()
    model.add(SimpleRNN(units=50, input_shape=(window_size, 1)))
    model.add(Dense(units=1))
    model.compile(optimizer='adam', loss='mean_squared_error')
    return model

# Step 3: Train RNN model
function train_rnn_model(model, X_train, y_train, epochs, batch_size):
    model.fit(X_train, y_train, epochs=epochs, batch_size=batch_size)
    return model

# Step 4: Forecast future values
function forecast_rnn(model, X_input, forecast_steps):
    predictions = []
    for step from 1 to forecast_steps:
        predicted_value = model.predict(X_input)
        append predicted_value to predictions
        update X_input with new predicted value
    return predictions
